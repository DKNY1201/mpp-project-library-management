package ui;

import java.util.Collections;
import java.util.List;

import business.Book;
import business.ControllerInterface;
import business.LibraryMember;
import business.SystemController;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextArea;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class AllBooksWindow extends Stage implements LibWindow {
	public static final AllBooksWindow INSTANCE = new AllBooksWindow();
	
	private boolean isInitialized = false;
	public boolean isInitialized() {
		return isInitialized;
	}
	public void isInitialized(boolean val) {
		isInitialized = val;
	}
	private TextArea ta;
	public void setData(String data) {
		ta.setText(data);
	}
	private AllBooksWindow() {}
	
	private ObservableList<Book> bookData = FXCollections.observableArrayList();

	public void init() {
		GridPane grid = new GridPane();
		grid.setId("top-container");
		grid.setAlignment(Pos.CENTER);
		grid.setHgap(10);
		grid.setVgap(10);
		grid.setPadding(new Insets(25, 25, 25, 25));

		Text scenetitle = new Text("All books");
		scenetitle.setFont(Font.font("Harlow Solid Italic", FontWeight.NORMAL, 20));
		grid.add(scenetitle, 0, 0, 2, 1);

		TableView<Book> table = new TableView<Book>();
		TableColumn<Book, String> memberIDColumn = new TableColumn<Book, String>("ISBN");
		memberIDColumn.setCellValueFactory(new PropertyValueFactory<Book, String>("isbn"));
		TableColumn<Book, String> firstNameColumn = new TableColumn<Book, String>("Title");
		firstNameColumn.setCellValueFactory(new PropertyValueFactory<Book, String>("title"));
		TableColumn<Book, String> lastNameColumn = new TableColumn<Book, String>("Max Checkout Length");
		lastNameColumn.setCellValueFactory(new PropertyValueFactory<Book, String>("maxCheckoutLength"));
		TableColumn<Book, String> telephoneColumn = new TableColumn<Book, String>("Author");
		telephoneColumn.setCellValueFactory(new PropertyValueFactory<Book, String>("telephone"));
		TableColumn<Book, String> addressColumn = new TableColumn<Book, String>("Address");
		addressColumn.setCellValueFactory(new PropertyValueFactory<Book, String>("address"));
		table.getColumns().addAll(memberIDColumn, firstNameColumn, lastNameColumn, telephoneColumn, addressColumn);

		table.setMinWidth(870);
		table.setMaxWidth(870);
		table.setMinHeight(80);
		firstNameColumn.setMinWidth(100);
		lastNameColumn.setMinWidth(100);
		telephoneColumn.setMinWidth(100);
		addressColumn.setMinWidth(600);

		grid.add(table, 0, 1, 2, 1);

		ControllerInterface c = new SystemController();
		bookData.clear();
		bookData.addAll(c.getAllBooks());
		table.setItems(bookData);

		Button backBtn = new Button("<= Back to Main");
		backBtn.setOnAction((ActionEvent e) -> {
			Start.hideAllWindows();
			Start.primStage().show();
		});

		HBox hBack = new HBox(10);
		hBack.setAlignment(Pos.BOTTOM_LEFT);
		hBack.getChildren().add(backBtn);
		grid.add(hBack, 0, 2);

		Scene scene = new Scene(grid);
		scene.getStylesheets().add(getClass().getResource("library.css").toExternalForm());
		setScene(scene);
	}
//	public void init() {
//		GridPane grid = new GridPane();
//		grid.setId("top-container");
//		grid.setAlignment(Pos.CENTER);
//        grid.setHgap(10);
//        grid.setVgap(10);
//        grid.setPadding(new Insets(25, 25, 25, 25));
//
//        Text scenetitle = new Text("All Book IDs");
//        scenetitle.setFont(Font.font("Harlow Solid Italic", FontWeight.NORMAL, 20)); //Tahoma
//        grid.add(scenetitle, 0, 0, 2, 1);
//		
//		ta = new TextArea();
//		grid.add(ta, 0,1);
//		Button backBtn = new Button("<= Back to Main");
//        backBtn.setOnAction(new EventHandler<ActionEvent>() {
//        	@Override
//        	public void handle(ActionEvent e) {
//        		Start.hideAllWindows();
//        		Start.primStage().show();
//        	}
//        });
//        HBox hBack = new HBox(10);
//        hBack.setAlignment(Pos.BOTTOM_LEFT);
//        hBack.getChildren().add(backBtn);
//        grid.add(hBack, 0, 2);
//		Scene scene = new Scene(grid);
//		scene.getStylesheets().add(getClass().getResource("library.css").toExternalForm());
//        setScene(scene);
//	}
}
